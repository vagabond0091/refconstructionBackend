name: CI â†’ EB (Dockerfile mode, no ECR)

on:
  push:
    branches: [ master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: { contents: read, id-token: write }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '21' }
      # Optional but fine to keep: builds the JAR on the runner too
      - name: Build JAR
        run: mvn -B -DskipTests package

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (startsWith(github.ref,'refs/heads/master') || startsWith(github.ref,'refs/tags/'))
    permissions: { id-token: write, contents: read }
    env:
      AWS_REGION: ap-southeast-1
      EB_APP_NAME: refconstructionopc
      EB_ENV_NAME: Refconstructionopc-env
      VERSION_LABEL: v-${{ github.run_number }}-${{ github.run_attempt }}-${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::140023375941:role/github-oidc-eb-deploy

      - name: Who am I
        run: aws sts get-caller-identity

      - name: Validate Dockerfile exists at repo root
        run: |
          test -f Dockerfile || { echo "Dockerfile missing at repo root"; exit 1; }
          head -n 50 Dockerfile || true

      - name: Create EB SourceBundle (Dockerfile mode, NO Dockerrun)
        run: |
          set -e
          # Remove any old bundles and any Dockerrun files so EB never switches modes
          rm -f SourceBundle*.zip
          find . -maxdepth 3 -type f -iname 'dockerrun*.json' -print -delete || true

          # If your Dockerfile copies target/*.jar, keep the build output
          if [ -d target ]; then ls -lah target || true; fi

          # Zip repo for EB, excluding git metadata/workflows and bundle files
          zip -qr SourceBundle.zip . \
            -x ".git/*" ".github/*" "SourceBundle*.zip"

          echo "Bundle contents (first 200 lines):"
          unzip -l SourceBundle.zip | sed -n '1,200p' || true  # non-fatal listing

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key:      ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_key:      ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_session_token:   ${{ env.AWS_SESSION_TOKEN }}
          region:              ${{ env.AWS_REGION }}
          application_name:    ${{ env.EB_APP_NAME }}
          environment_name:    ${{ env.EB_ENV_NAME }}
          version_label:       ${{ env.VERSION_LABEL }}
          deployment_package:  SourceBundle.zip
          existing_bucket_name: elasticbeanstalk-ap-southeast-1-140023375941
          wait_for_deployment: true
