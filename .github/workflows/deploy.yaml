name: CI → EB (Dockerfile, no ECR)

on:
  push:
    branches: [ master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: { contents: read, id-token: write }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '21' }
      # Optional pre-build (safe if your Dockerfile builds the JAR anyway)
      - name: Build JAR (optional)
        run: mvn -B -DskipTests package

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (startsWith(github.ref,'refs/heads/master') || startsWith(github.ref,'refs/tags/'))
    permissions: { id-token: write, contents: read }
    env:
      AWS_REGION: ap-southeast-1
      EB_APP_NAME: refconstructionopc
      EB_ENV_NAME: Refconstructionopc-env
      VERSION_LABEL: v-${{ github.run_number }}-${{ github.run_attempt }}-${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::140023375941:role/github-oidc-eb-deploy

      - name: Who am I
        run: aws sts get-caller-identity

      - name: Validate Dockerfile
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile missing at repo root. EB Dockerfile mode requires it."
            exit 1
          fi
          head -n 50 Dockerfile || true

      - name: Create EB SourceBundle (Dockerfile mode, NO Dockerrun)
        run: |
          set -e
          # Ensure no Dockerrun survives anywhere in the repo
          FOUND=$(find . -type f -iname 'dockerrun*.json' -print)
          if [ -n "$FOUND" ]; then
            echo "❌ Found Dockerrun files in repo:"
            echo "$FOUND"
            exit 1
          fi

          rm -f SourceBundle*.zip
          # (Optional) show local build outputs if present
          [ -d target ] && ls -lah target || true

          # Zip the repo (exclude git metadata & the bundle itself)
          zip -qr SourceBundle.zip . \
            -x ".git/*" ".github/*" "SourceBundle*.zip"

          echo "Bundle listing (first 200 lines):"
          unzip -l SourceBundle.zip | head -n 200 || true

          # Double-check the bundle contains Dockerfile and does NOT contain Dockerrun
          if ! unzip -l SourceBundle.zip | awk '{print $4}' | grep -qi '^Dockerfile$'; then
            echo "❌ Dockerfile not found in SourceBundle.zip root."
            exit 1
          fi
          if unzip -l SourceBundle.zip | awk '{print $4}' | grep -qi 'dockerrun'; then
            echo "❌ Dockerrun found in SourceBundle.zip. Aborting."
            exit 1
          fi
          echo "✅ Bundle looks good (Dockerfile present, no Dockerrun)."

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ env.AWS_SESSION_TOKEN }}
          region:             ${{ env.AWS_REGION }}
          application_name:   ${{ env.EB_APP_NAME }}
          environment_name:   ${{ env.EB_ENV_NAME }}
          version_label:      ${{ env.VERSION_LABEL }}
          deployment_package: SourceBundle.zip
          existing_bucket_name: elasticbeanstalk-ap-southeast-1-140023375941
          wait_for_deployment: true

      - name: Show recent EB environment events
        run: |
          aws elasticbeanstalk describe-events \
            --application-name "$EB_APP_NAME" \
            --environment-name "$EB_ENV_NAME" \
            --max-records 50 \
            --region "$AWS_REGION" \
          | jq -r '.Events[] | "\(.EventDate) [\(.Severity)] \(.Message)"' \
          | sort
